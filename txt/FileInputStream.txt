=================================================================================
FILEINPUTSTREAM
=================================================================================
Extends the InputStream abstract class.
Reads byte data from files.
All methods of InputStream are implemented and available. Specific methods are below.

||METHOD|DESCRIPTION||
||read(byte[] byteArray, int startPosition, int length)|reads length number of bytes into byteArray from startPosition in the array||
||finalize()|ensures the calling of close()||
||getChannel()|returns the object of FileChannel associated with the input stream||
||getFD()|returns the file descriptor associated with the input stream||

In case the file contains Unicode characters, those characters in byte will be grater or equal with 0x80.

EXAMPLE FOR USAGE:
import java.io.FileInputStream;
import java.io.File;
...
try {
    FileInputStream fis = new FileInputStream(string fileName); //or:
    FileInputStream fis = new FileInputStream(File file);
    //reading one-by-one
    while (fis.available() > 0) {
        //process fis.read()
    }
    //or reading all-at-once
    byte[] byteArray = new byte[fis.available()];
    fis.read(byteArray);
    //processing byteArray or converting to String before of that
    fis.close();
}
catch (Exception e) {...}
END OF EXAMPLE

EXAMPLE FOR HANDLE UNICODE SEPARATELY:
...
FileInputStream fis;
int data;
...
data = fis.read();
if (data < 0x80) {
    //process not-unicode
} else {
    //process unicode
}
...
END OF EXAMPLE

=>STREAM
=>INPUTSTREAM
=>OBJECTINPUTSTREAM
