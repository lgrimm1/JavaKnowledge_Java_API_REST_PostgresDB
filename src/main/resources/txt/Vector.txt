=================================================================================
VECTOR
=================================================================================
Implements List interface.
Extending class is Stack.
Resizeable array solution like ArrayList.

Differences between Vector and ArrayList:
    a. in case a thread opens the Vector for writing, the Vector will be blocked for other threads, for them throws an exception (ArrayList is safe for multi-tread access)
    b. ArrayList uses Collection.synchronizedList() to synchronize accessing methods (Vector blocks instead)
Based upon these, usage of ArrayList is preferred for thread-safety, and it is more efficient.

java.util.Vector;
...
Vector<elementType> vector = new Vector<>(); //declaration and memory allocation

||Method|Description||
||add()|adds or inserts element||
||addAll()|adds all elements of an other Vector||
||get()|returns reference of element||
||iterator()|returns an Iterator to access all elements||
||remove()|removes an element||
||removeAll()|removes all element||
||clear()|removes all element (more efficient than removeAll)||
||set()|changes an element||
||size()|returns the number of elements||
||toArray()|converts the Vector to an array||
||toString()|converts the Vector to a String||
||contains()|checks whether the Vector contains the given value||

=>List
=>Collection
=>ArrayList
=>Stack
=>Iterator
=>ListIterator
