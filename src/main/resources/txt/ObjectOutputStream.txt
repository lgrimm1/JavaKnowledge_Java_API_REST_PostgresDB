=================================================================================
OBJECTOUTPUTSTREAM
=================================================================================
Extends the OutputStream abstract class.
Can be used to write objects that can be read by ObjectInputStream.
Encodes Java objects using the class name and object values (serialization).
All instances of classes which implement the Serializable interface can be processed.
The encoded objects will be written into files. Files can be transferred through networks.
Reading from the stream must follow the order of writing to stream (FIFO).

Due to having slightly different structure, all methods are described here.

||METHOD|DESCRIPTION||
||write()|sends a byte data to the linked file stream||
||writeBoolean()|sends data in boolean form to the file stream||
||writeChar()|sends data in character form to the file stream||
||writeInt()|sends data in integer form to the file stream||
||writeObject()|sends object to the file stream||
||flush()|clears all data from the stream||
||drain()|sends all buffered data to the file stream||
||close()|closes the stream||

EXAMPLE FOR WRITING DATA:
import java.io.ObjectOutputStream;
import java.io.FileOutputStream;
import java.io.File;
import java.io.Serializable;
...
class ClassName implements Serializable {...};
boolean booleanData = ...;
char characterData = ...;
int integerData = ...;
String stringData = ...;
ClassName className = new ClassName(...);
//write data
try {
    FileOutputStream fos = new FileOutputStream(String file); //create file stream for output, see constructors at FileOutputStream
    ObjectOutputStream oos = new ObjectOutputStream(fos); //create object stream with linking the file stream to it
    oos.writeBoolean(booleanData);
    oos.writeChar(characterData);
    oos.writeInt(integerData);
    oos.writeObject(objectData);
    oos.writeObject(className);
    oos.close();
    fos.close();
}
catch (Exception e) {...}

=>STREAM
=>OUTPUTSTREAM
=>OBJECTINPUTSTREAM
=>FILEOUTPUTSTREAM
=>SERIALIZATION
